name: CI Pipeline

on:
  push:
    branches:
      - main
    tags: 
      - "*.*.*"
  pull_request:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changed add-ons
        id: changed_addons
        run: |
          git fetch origin main --depth=1
          
          # Find changed files compared to main
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          # Find addon directories by looking for config.yaml inside ha_addon/
          ADDONS=$(find ha_addon -name "config.yaml" -printf "%h\n")
          
          declare -a CHANGED_ADDONS=()
          
          for addon in $ADDONS; do
            for file in $CHANGED_FILES; do
              if [[ "$file" == "$addon"* ]]; then
                CHANGED_ADDONS+=("\"$addon\"")
              fi
            done
          done
          
          if [ ${#CHANGED_ADDONS[@]} -eq 0 ]; then
            echo "No changed addons detected"
            echo "changed=false" >> $GITHUB_ENV
            echo "addons=[]" >> $GITHUB_ENV
          else
            ADDON_JSON=$(printf ",%s" "${CHANGED_ADDONS[@]}")
            ADDON_JSON="[${ADDON_JSON:1}]"
            echo "Detected changed addons: $ADDON_JSON"
            echo "changed=true" >> $GITHUB_ENV
            echo "addons=$ADDON_JSON" >> $GITHUB_ENV
          fi
          
          echo "changed=${{ env.changed }}" >> $GITHUB_OUTPUT
          echo "addons=${{ env.addons }}" >> $GITHUB_OUTPUT

  build:
    needs: init
    if: needs.init.outputs.changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["amd64", "arm64", "armv7"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and Push
        run: |
          echo "Would now build addon ${{ matrix.addon }} for ${{ matrix.arch }}"
          # hier kannst du deinen echten Build-Job einhängen (z.B. home-assistant/builder)

  # Optional: Manifest-merge kannst du wie bisher anschließen
