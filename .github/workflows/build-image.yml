name: Build Image

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      platform:
        required: true
        type: string
      base:
        required: false
        type: string
        default: ""
      context:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      build-args:
        required: false
        type: string
        default: ""
      image-suffix:
        required: true
        type: string
      digest-prefix:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - id: lower-repo
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}${{ inputs.image-suffix }}" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ steps.lower-repo.outputs.IMAGE_NAME }}

      - name: Prepare Safe Platform Name
        id: safe-platform
        run: |
          SAFE_PLATFORM=$(echo "${{ inputs.platform }}" | sed 's|/|-|g')
          echo "SAFE_PLATFORM=$SAFE_PLATFORM" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platform }}
          file: ${{ inputs.dockerfile }}
          push: true
          provenance: false
          tags: |
            ${{ inputs.registry }}/${{ steps.lower-repo.outputs.IMAGE_NAME }}:${{ github.ref_name }}-${{ env.SAFE_PLATFORM }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ${{ inputs.build-args }}
            BASE=${{ inputs.base }}
            NODE_ENV=production
          cache-from: type=gha
          cache-to: type=gha,mode=max
